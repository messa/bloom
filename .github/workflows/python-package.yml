# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:

    - uses: actions/checkout@v4
      with:
        path: src

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Build package
      run: |
        python3 --version
        cc --version
        uv --version
        cd src
        uv build

    - name: Create test environment
      run: |
        mkdir test-env
        cd test-env
        uv venv
        uv add pytest pytest-cov ruff mypy
        uv add ../src/dist/*.whl

    - name: Lint source code
      run: |
        cd test-env
        uv run ruff check ../src/bloom
        uv run ruff format --check ../src/bloom

    - name: Type check with mypy
      run: |
        cd test-env
        uv run mypy ../src/bloom

    - name: Verify package installation
      run: |
        cd test-env
        uv run python -c 'from bloom import _hashc; print(_hashc)'
        uv run bloom --help

    - name: Test with pytest
      run: |
        cd test-env
        uv run pytest -v -s --tb=native ../src/tests

    - name: End-to-end test
      run: |
        set -ex
        cd test-env
        mkdir -p e2e
        cd e2e
        echo foobar | xz > sample.log.xz
        uv run bloom --db sample.db --index --file sample.log.xz

        find . -type f -name '*.log.xz' | uv run bloom --db sample.db ooba > ooba_output.txt
        find . -type f -name '*.log.xz' | uv run bloom --db sample.db nope > nope_output.txt

        test $(wc -l < ooba_output.txt) -eq 1
        test $(wc -l < nope_output.txt) -eq 0